# === BLOCK: AUTOMATION_LICHT_SONNENUNTERGANG ===
# Zweck: Alle Lichter (Wohnzimmer + AuÃŸen) bei Sonnenuntergang einschalten
# Status: âœ… Getestet - DELAYS ERFORDERLICH fÃ¼r Sicherung!
# Erstellt: 2025-08-22
# GeÃ¤ndert: 2025-08-23 - HA 2024.10+ Syntax, MIT 0.5s Delays (Stromspitzen vermeiden!)
# AbhÃ¤ngigkeiten: sun.sun, switch.steckdose_1-5, switch.licht_haustur_licht_haustur

- id: licht_sonnenuntergang
  alias: "Licht - Sonnenuntergang alle an"
  description: "Schaltet alle Lichter bei Sonnenuntergang mit 0.5s VerzÃ¶gerung ein"
  triggers:
    - trigger: sun
      event: sunset
  actions:
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_1
    - delay: 
        milliseconds: 500
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_2
    - delay: 
        milliseconds: 500
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_3
    - delay: 
        milliseconds: 500
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_4
    - delay: 
        milliseconds: 500
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_5
    - delay: 
        milliseconds: 500
    - action: switch.turn_on
      target:
        entity_id: switch.licht_haustur_licht_haustur

# === END BLOCK: AUTOMATION_LICHT_SONNENUNTERGANG ===

# === BLOCK: AUTOMATION_LICHT_NACHTABSCHALTUNG ===
# Zweck: Wohnzimmerlichter um 23:00 ausschalten
# Status: âœ… Getestet - DELAYS ERFORDERLICH!
# Erstellt: 2025-08-22
# GeÃ¤ndert: 2025-08-23 - HA 2024.10+ Syntax, MIT Delays
# AbhÃ¤ngigkeiten: switch.steckdose_1-5

- id: licht_nachtabschaltung
  alias: "Licht - Nachtabschaltung 23:00"
  description: "Schaltet Wohnzimmerlichter um 23:00 mit 0.5s VerzÃ¶gerung aus"
  triggers:
    - trigger: time
      at: "23:00:00"
  actions:
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_1
    - delay: 
        milliseconds: 500
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_2
    - delay: 
        milliseconds: 500
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_3
    - delay: 
        milliseconds: 500
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_4
    - delay: 
        milliseconds: 500
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_5

# === END BLOCK: AUTOMATION_LICHT_NACHTABSCHALTUNG ===

# === BLOCK: AUTOMATION_LICHT_SONNENAUFGANG ===
# Zweck: AuÃŸenlampe bei Sonnenaufgang ausschalten
# Status: âœ… Getestet
# Erstellt: 2025-08-22
# GeÃ¤ndert: 2025-08-23 - HA 2024.10+ Syntax
# AbhÃ¤ngigkeiten: sun.sun, switch.licht_haustur_licht_haustur

- id: licht_sonnenaufgang
  alias: "Licht - Sonnenaufgang AuÃŸenlampe aus"
  description: "Schaltet AuÃŸenlampe bei Sonnenaufgang aus"
  triggers:
    - trigger: sun
      event: sunrise
  actions:
    - action: switch.turn_off
      target:
        entity_id: switch.licht_haustur_licht_haustur

# === END BLOCK: AUTOMATION_LICHT_SONNENAUFGANG ===

# === BLOCK: AUTOMATION_LICHT_WINTER_MORGEN_AN ===
# Zweck: Wohnzimmerlichter um 07:00 an (nur im Winter wenn Sonnenaufgang nach 07:00)
# Status: âœ… Getestet - DELAYS ERFORDERLICH!
# Erstellt: 2025-08-22
# GeÃ¤ndert: 2025-08-23 - HA 2024.10+ Syntax, MIT 0.5s Delays
# AbhÃ¤ngigkeiten: sun.sun, switch.steckdose_1-5

- id: licht_winter_morgen_an
  alias: "Licht - Winter 07:00 Wohnzimmer an"
  description: "Schaltet Wohnzimmerlichter um 07:00 ein, nur wenn Sonnenaufgang nach 07:00"
  triggers:
    - trigger: time
      at: "07:00:00"
  conditions:
    - condition: template
      value_template: "{{ as_timestamp(state_attr('sun.sun', 'next_rising')) > as_timestamp(today_at('07:00')) }}"
  actions:
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_1
    - delay: 
        milliseconds: 500
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_2
    - delay: 
        milliseconds: 500
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_3
    - delay: 
        milliseconds: 500
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_4
    - delay: 
        milliseconds: 500
    - action: switch.turn_on
      target:
        entity_id: switch.steckdose_5

# === END BLOCK: AUTOMATION_LICHT_WINTER_MORGEN_AN ===

# === BLOCK: AUTOMATION_LICHT_WINTER_MORGEN_AUS ===
# Zweck: Wohnzimmerlichter um 08:00 aus (nur im Winter wenn sie um 07:00 angingen)
# Status: âœ… Getestet - DELAYS ERFORDERLICH!
# Erstellt: 2025-08-22
# GeÃ¤ndert: 2025-08-23 - HA 2024.10+ Syntax, MIT 0.5s Delays
# AbhÃ¤ngigkeiten: sun.sun, switch.steckdose_1-5

- id: licht_winter_morgen_aus
  alias: "Licht - Winter 08:00 Wohnzimmer aus"
  description: "Schaltet Wohnzimmerlichter um 08:00 aus, nur wenn Sonnenaufgang nach 07:00"
  triggers:
    - trigger: time
      at: "08:00:00"
  conditions:
    - condition: template
      value_template: "{{ as_timestamp(state_attr('sun.sun', 'next_rising')) > as_timestamp(today_at('07:00')) }}"
  actions:
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_1
    - delay: 
        milliseconds: 500
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_2
    - delay: 
        milliseconds: 500
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_3
    - delay: 
        milliseconds: 500
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_4
    - delay: 
        milliseconds: 500
    - action: switch.turn_off
      target:
        entity_id: switch.steckdose_5

# === END BLOCK: AUTOMATION_LICHT_WINTER_MORGEN_AUS ===

# === BLOCK: AUTOMATION_KRITISCHE_INFRASTRUKTUR ===
# Zweck: HÃ¤lt lebensnotwendige GerÃ¤te immer eingeschaltet (Stromausfall-Schutz)
# Status: ğŸ”„ Neu
# Erstellt: 2025-08-22
# Trigger: Alle 5min + HA-Start (Stromausfall-Recovery)
# AbhÃ¤ngigkeiten: 12 kritische Switches (KÃ¼hlschrÃ¤nke, Heizung, Technik)
# Wichtig: Verhindert Lebensmittelverderb und kalte Wohnung im Winter

- id: kritische_infrastruktur_immer_an
  alias: "Kritische Infrastruktur - Immer An"
  description: "Stellt sicher, dass kritische GerÃ¤te nach Stromausfall wieder eingeschaltet werden"
  trigger:
    # Jede Minute prÃ¼fen
    - trigger: time_pattern
      minutes: "/1"
    # Nach Home Assistant Start (Stromausfall-Recovery)
    - trigger: homeassistant
      event: start
  action:
    # Alle kritischen Switches einschalten (idempotent)
    - action: switch.turn_on
      target:
        entity_id:
          # KÃ¼hlgerÃ¤te - KRITISCH fÃ¼r Lebensmittel
          - switch.kuhlschrank
          - switch.kuhlschrank_keller
          - switch.froster_kuche
          # Wasser/Heizung - KRITISCH fÃ¼r Wohnen
          - switch.steckdose_31_heizung
          - switch.steckdose_23_wasserenthaerter
          - switch.steckdose_26_franke_heisswasser
          - switch.steckdose_27_franke_chiller
          # HaushaltsgerÃ¤te - WICHTIG fÃ¼r Alltag
          - switch.steckdose_21_waschmaschine
          - switch.steckdose_22_trockner
          - switch.steckdose_30_spuelmaschine
          # Technik-Infrastruktur - KRITISCH fÃ¼r System
          - switch.steckdose_34_tp_link_switch
          - switch.espsomfy

# === END BLOCK: AUTOMATION_KRITISCHE_INFRASTRUKTUR ===

# === BLOCK: AUTOMATION_SCHLAFBOOSTER_PHASE2_TRIGGER ===
# Zweck: Automatischer Wechsel von Schlafbooster Phase 1 zu Phase 2
# Status: ğŸ”„ Neu
# Erstellt: 2025-08-22
# AbhÃ¤ngigkeiten: input_boolean.schlafbooster_aktiv, climate EntitÃ¤ten

- id: schlafbooster_phase2_trigger
  alias: "Schlafbooster - Auto Wechsel zu Phase 2"
  description: "Wechselt automatisch in leisen Modus wenn 21Â°C erreicht"
  trigger:
    # Ãœberwacht alle Schlafraum-Temperaturen
    - trigger: numeric_state
      entity_id:
        - climate.schlafzimmer
        - climate.finn
        - climate.nele
        - climate.jacob
      attribute: current_temperature
      below: 21.5  # Etwas Ã¼ber 21Â°C um Schwankungen zu vermeiden
  
  condition:
    # Nur ausfÃ¼hren wenn Schlafbooster aktiv ist
    - condition: state
      entity_id: input_boolean.schlafbooster_aktiv
      state: 'on'
    
    # Und mindestens ein Raum die Zieltemperatur erreicht hat
    - condition: template
      value_template: >
        {{ 
          state_attr('climate.schlafzimmer', 'current_temperature') <= 21.5 or
          state_attr('climate.finn', 'current_temperature') <= 21.5 or
          state_attr('climate.nele', 'current_temperature') <= 21.5 or
          state_attr('climate.jacob', 'current_temperature') <= 21.5
        }}
  
  action:
    # Kurz warten um sicherzugehen dass Temperatur stabil ist
    - delay: 30
    
    # In Phase 2 wechseln
    - action: script.turn_on
      target:
        entity_id: script.klima_schlafbooster_phase2
    
    # Benachrichtigung senden (optional)
    - action: persistent_notification.create
      data:
        title: "Schlafbooster"
        message: "Zieltemperatur erreicht - wechsle in leisen Nachtmodus"
        notification_id: schlafbooster_phase2

# === END BLOCK: AUTOMATION_SCHLAFBOOSTER_PHASE2_TRIGGER ===