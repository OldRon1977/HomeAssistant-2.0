- id: licht_sonnenuntergang
  alias: Licht - Sonnenuntergang alle an
  description: Schaltet alle Lichter bei Sonnenuntergang mit 0.5s Verzögerung ein
  triggers:
  - trigger: sun
    event: sunset
  actions:
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_1
  - delay:
      milliseconds: 500
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_2
  - delay:
      milliseconds: 500
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_3
  - delay:
      milliseconds: 500
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_4
  - delay:
      milliseconds: 500
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_5
  - delay:
      milliseconds: 500
  - action: switch.turn_on
    target:
      entity_id: switch.licht_haustur_licht_haustur
- id: licht_nachtabschaltung
  alias: Licht - Nachtabschaltung 23:00
  description: Schaltet Wohnzimmerlichter um 23:00 mit 0.5s Verzögerung aus
  triggers:
  - trigger: time
    at: '23:00:00'
  actions:
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_1
  - delay:
      milliseconds: 500
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_2
  - delay:
      milliseconds: 500
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_3
  - delay:
      milliseconds: 500
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_4
  - delay:
      milliseconds: 500
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_5
- id: licht_sonnenaufgang
  alias: Licht - Sonnenaufgang Außenlampe aus
  description: Schaltet Außenlampe bei Sonnenaufgang aus
  triggers:
  - trigger: sun
    event: sunrise
  actions:
  - action: switch.turn_off
    target:
      entity_id: switch.licht_haustur_licht_haustur
- id: licht_winter_morgen_an
  alias: Licht - Winter 07:00 Wohnzimmer an
  description: Schaltet Wohnzimmerlichter um 07:00 ein, nur wenn Sonnenaufgang vor
    07:00
  triggers:
  - trigger: time
    at: 07:00:00
  conditions:
  - condition: template
    value_template: '{{ as_timestamp(state_attr(''sun.sun'', ''next_rising'')) < as_timestamp(today_at(''07:00''))
      }}'
  actions:
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_1
    data: {}
  - delay:
      milliseconds: 500
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_2
    data: {}
  - delay:
      milliseconds: 500
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_3
    data: {}
  - delay:
      milliseconds: 500
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_4
    data: {}
  - delay:
      milliseconds: 500
  - action: switch.turn_on
    target:
      entity_id: switch.steckdose_5
    data: {}
- id: licht_winter_morgen_aus
  alias: Licht - Winter 08:00 Wohnzimmer aus
  description: Schaltet Wohnzimmerlichter um 08:00 aus, nur wenn Sonnenaufgang vor
    07:00
  triggers:
  - trigger: time
    at: 08:00:00
  conditions:
  - condition: template
    value_template: '{{ as_timestamp(state_attr(''sun.sun'', ''next_rising'')) < as_timestamp(today_at(''07:00''))
      }}'
  actions:
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_1
    data: {}
  - delay:
      milliseconds: 500
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_2
    data: {}
  - delay:
      milliseconds: 500
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_3
    data: {}
  - delay:
      milliseconds: 500
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_4
    data: {}
  - delay:
      milliseconds: 500
  - action: switch.turn_off
    target:
      entity_id: switch.steckdose_5
    data: {}
- id: kritische_infrastruktur_immer_an
  alias: Kritische Infrastruktur - Immer An
  description: Stellt sicher, dass kritische Geräte nach Stromausfall wieder eingeschaltet
    werden
  trigger:
  - trigger: time_pattern
    minutes: /1
  - trigger: homeassistant
    event: start
  action:
  - action: switch.turn_on
    target:
      entity_id:
      - switch.kuhlschrank
      - switch.kuhlschrank_keller
      - switch.froster_kuche
      - switch.steckdose_31_heizung
      - switch.steckdose_23_wasserenthaerter
      - switch.steckdose_26_franke_heisswasser
      - switch.steckdose_27_franke_chiller
      - switch.steckdose_21_waschmaschine
      - switch.steckdose_22_trockner
      - switch.steckdose_30_spuelmaschine
      - switch.steckdose_34_tp_link_switch
      - switch.espsomfy
- id: schlafbooster_phase2_trigger
  alias: Schlafbooster - Auto Wechsel zu Phase 2
  description: Wechselt automatisch in leisen Modus wenn 21°C erreicht
  trigger:
  - trigger: numeric_state
    entity_id:
    - climate.schlafzimmer
    - climate.finn
    - climate.nele
    - climate.jacob
    attribute: current_temperature
    below: 21.5
  condition:
  - condition: state
    entity_id: input_boolean.schlafbooster_aktiv
    state: 'on'
  - condition: template
    value_template: "{{ \n  state_attr('climate.schlafzimmer', 'current_temperature')
      <= 21.5 or\n  state_attr('climate.finn', 'current_temperature') <= 21.5 or\n
      \ state_attr('climate.nele', 'current_temperature') <= 21.5 or\n  state_attr('climate.jacob',
      'current_temperature') <= 21.5\n}}\n"
  action:
  - delay: 30
  - action: script.turn_on
    target:
      entity_id: script.klima_schlafbooster_phase2
  - action: persistent_notification.create
    data:
      title: Schlafbooster
      message: Zieltemperatur erreicht - wechsle in leisen Nachtmodus
      notification_id: schlafbooster_phase2
- id: dachluke_timer_restart
  alias: Dachluke - Timer bei Positionsänderung starten
  description: Startet Timer bei jeder Dachluke-Bewegung mit einstellbarer Dauer
  trigger:
  - trigger: state
    entity_id: cover.strom_dachluke_unten_dachluke_bad_unten
    attribute: current_position
  action:
  - action: timer.cancel
    entity_id: timer.dachluke_auto_close
  - action: timer.start
    entity_id: timer.dachluke_auto_close
    data:
      duration: '{% set minutes = states(''input_number.dachluke_timer_minuten'')
        | int %} {{ ''%02d:%02d:00'' | format(0, minutes) }}

        '
- id: dachluke_auto_close
  alias: Dachluke - Automatisch schließen nach Timer
  description: Schließt Dachluke auf 0% nach Timer-Ablauf
  trigger:
  - trigger: event
    event_type: timer.finished
    event_data:
      entity_id: timer.dachluke_auto_close
  condition:
  - condition: template
    value_template: '{{ state_attr(''cover.strom_dachluke_unten_dachluke_bad_unten'',
      ''current_position'') | int > 0 }}'
  action:
  - action: cover.set_cover_position
    entity_id: cover.strom_dachluke_unten_dachluke_bad_unten
    data:
      position: 0
